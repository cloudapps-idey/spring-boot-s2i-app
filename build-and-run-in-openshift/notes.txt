mysql-container-setup

1. Run to create an ephemeral mysql container
   init-db-container.sh/bat 

2. oc get pod

3. Copy the pod name and set the value in the populate-db.sh/bat
     mpod=mysql-1-cj68h

4. populate-db.sh/bat

5. if issue with grant then 
    oc rsh mysql pod
	mysql -u root
	GRANT ALL PRIVILEGES ON *.* TO 'user1'@'%';
	







s2i-app setup
1. create -f s2i-app.cm
2. create -f s2i-app.sec
3. delete the .odo directory
4. create the component using IntelliJ ide
5. oc set env dc/s2i-app --from configmap/s2i-cm
6. oc set env dc/s2i-app --from secret/s2i-sec
7. oc expose svc/s2i-app
8. oc get route
9. test : http://<route>/catfactservice/facts
          http://<route>/bookservice/books

docker login registy.redhat.io 
docker pull registry.redhat.io/rhel8/mysql-80:1
docker run -d -p 3306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=password -e MYSQL_DATABASE=bookstore -e MYSQL_ROOT_PASSWORD=password --name=mysql registry.redhat.io/rhel8/mysql-80
cd /Users/indranidey/Documents/_0_1_helpers/cheat-sheet/OCP/QUICK-STARTS/configmap-secrets/spring-boot-s2i-app/build-and-run-in-openshift/mysql-container-setup
docker cp create-book-table.sql mysql:/opt
docker cp insert-book-data.sql mysql:/opt  
docker exec mysql /bin/bash -c 'mysql -uuser1 -ppassword bookstore < /opt/create-book-table.sql' 
docker exec mysql /bin/bash -c 'mysql -uuser1 -ppassword bookstore < /opt/insert-book-data.sql' 

localhost